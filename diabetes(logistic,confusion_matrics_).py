# -*- coding: utf-8 -*-
"""diabetes(logistic,confusion matrics ).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QCGKeK3jYk6Z8R9l9lZ9aVP7IfCbGbSF
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

path='/content/diabetes.csv'
data=pd.read_csv(path)
data.head()

X=data[['Pregnancies',	'Glucose',	'BloodPressure',	'SkinThickness',	'Insulin',	'BMI','DiabetesPedigreeFunction',	'Age']]
Y=data['Outcome']
print(X,Y)

#split X and Y into training and testing sets
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=0)
print(X_train)
print(X_test)


#import the class
from sklearn.linear_model import LogisticRegression
#instantiate the model(using the default parameters)
logreg=LogisticRegression()
#fit the model with data
logreg.fit(X_train,Y_train)
print(Y_test)

Y_pred = logreg.predict(X_test)

# accuracy of logistic model
print("Accuracy:",metrics.accuracy_score(Y_test,Y_pred))



#import the metrics class
from sklearn import metrics
cnf_matrix = metrics.confusion_matrix(Y_test,Y_pred)
cnf_matrix

# Commented out IPython magic to ensure Python compatibility.
#import required modules
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

class_name=[0,1]
fig,ax=plt.subplots()
tick_marks=np.arange(len(class_name))
plt.xticks(tick_marks,class_name)
plt.yticks(tick_marks,class_name)
plt.show()

sns.heatmap(pd.DataFrame (cnf_matrix),annot=True,cmap="Greens",annot_kws={"fontsize":10})
ax.xaxis.set_label_position('bottom')
plt.tight_layout()
plt.title('confusion matrix',y=1.4)
plt.xlabel('Actual label')
plt.ylabel('Predicted label')

print("Accuracy:",metrics.accuracy_score(Y_test,Y_pred))
print("Precision:",metrics.precision_score(Y_test,Y_pred))
print("Recall:",metrics.recall_score(Y_test,Y_pred))
print("f1 score:",metrics.f1_score(Y_test,Y_pred))